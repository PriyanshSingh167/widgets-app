{"ast":null,"code":"import _slicedToArray from \"C:/Users/roste/Downloads/widgets-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\roste\\\\Downloads\\\\widgets-app\\\\src\\\\components\\\\Search.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Search = function Search() {\n  _s();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      term = _useState2[0],\n      setTerm = _useState2[1]; // We cannot mark the arrow function that we're passing to useEffect as async or any other function.\n  // i.e\n  // useEffect(\n  //   (async) => {\n  //     await axios(\"Url\");\n  //   },\n  //   [term]\n  // );    is wrong. To solve this we can use three ways\n  // Method 1\n  // useEffect(() => {\n  //   const search = async () => {\n  //     await axios.get(url);\n  //   };\n  // }, [term]);\n  // Method 2\n  // useEffect(() => {\n  //   (async () => {\n  //     await axios.get(url);\n  //   })();\n  // }, [term]);\n  // Method 3: Using promises\n\n\n  useEffect(function () {\n    axios.get(url).then(function (res) {\n      console.log(response);\n    });\n  }, [term]);\n\n  function handleChange(event) {\n    var newTerm = event.target.value;\n    setTerm(newTerm);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter Search Term\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          value: term,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Search, \"/5KAahafUtji5zHCBz7ekk6RmSo=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/roste/Downloads/widgets-app/src/components/Search.js"],"names":["React","useState","useEffect","axios","Search","term","setTerm","get","url","then","res","console","log","response","handleChange","event","newTerm","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AACnB,kBAAwBH,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOI,IAAP;AAAA,MAAaC,OAAb,iBADmB,CAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;AAEAJ,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,KAAK,CAACI,GAAN,CAAUC,GAAV,EAAeC,IAAf,CAAoB,UAACC,GAAD,EAAS;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACD,KAFD;AAGD,GAJQ,EAIN,CAACR,IAAD,CAJM,CAAT;;AAMA,WAASS,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA7B;AACAZ,IAAAA,OAAO,CAACU,OAAD,CAAP;AACD;;AACD,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAyB,UAAA,KAAK,EAAEX,IAAhC;AAAsC,UAAA,QAAQ,EAAES;AAAhD;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAhDD;;GAAMV,M;;KAAAA,M;AAkDN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Search = () => {\r\n  const [term, setTerm] = useState(\"\");\r\n  // We cannot mark the arrow function that we're passing to useEffect as async or any other function.\r\n  // i.e\r\n  // useEffect(\r\n  //   (async) => {\r\n  //     await axios(\"Url\");\r\n  //   },\r\n  //   [term]\r\n  // );    is wrong. To solve this we can use three ways\r\n  // Method 1\r\n\r\n  // useEffect(() => {\r\n  //   const search = async () => {\r\n  //     await axios.get(url);\r\n  //   };\r\n  // }, [term]);\r\n\r\n  // Method 2\r\n\r\n  // useEffect(() => {\r\n  //   (async () => {\r\n  //     await axios.get(url);\r\n  //   })();\r\n  // }, [term]);\r\n\r\n  // Method 3: Using promises\r\n\r\n  useEffect(() => {\r\n    axios.get(url).then((res) => {\r\n      console.log(response);\r\n    });\r\n  }, [term]);\r\n\r\n  function handleChange(event) {\r\n    const newTerm = event.target.value;\r\n    setTerm(newTerm);\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"ui form\">\r\n        <div className=\"label\">\r\n          <label>Enter Search Term</label>\r\n          <input className=\"input\" value={term} onChange={handleChange} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}
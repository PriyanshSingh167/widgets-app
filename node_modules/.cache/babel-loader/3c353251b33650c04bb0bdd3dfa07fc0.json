{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/roste/Downloads/widgets-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/roste/Downloads/widgets-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\roste\\\\Downloads\\\\widgets-app\\\\src\\\\components\\\\Search.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"C:\\\\Users\\\\roste\\\\Downloads\\\\widgets-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Search = function Search() {\n  _s();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      term = _useState2[0],\n      setTerm = _useState2[1]; // We cannot mark the arrow function that we're passing to useEffect as async or any other function.\n  // i.e\n  // useEffect(\n  //   (async) => {\n  //     await axios(\"Url\");\n  //   },\n  //   [term]\n  // );    is wrong. To solve this we can use three ways\n  // Method 1\n  // useEffect(() => {\n  //   const search = async () => {\n  //     await axios.get(url);\n  //   };\n  // }, [term]);\n  // Method 2\n  // useEffect(() => {\n  //   (async () => {\n  //     await axios.get(url);\n  //   })();\n  // }, [term]);\n  // Method 3: Using promises\n  // useEffect(() => {\n  //   axios.get(url).then((res) => {\n  //     console.log(response);\n  //   });\n  // }, [term]);\n\n\n  useEffect(function () {\n    var search = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"https://en.wikipedia.org/w/api.php\", {\n                  params: {\n                    action: \"query\",\n                    list: \"search\",\n                    format: \"json\",\n                    origin: \"*\",\n                    srsearch: term\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function search() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }, [term]);\n\n  function handleChange(event) {\n    var newTerm = event.target.value;\n    setTerm(newTerm);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter Search Term\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          value: term,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Search, \"/5KAahafUtji5zHCBz7ekk6RmSo=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/roste/Downloads/widgets-app/src/components/Search.js"],"names":["React","useState","useEffect","axios","Search","term","setTerm","search","get","params","action","list","format","origin","srsearch","handleChange","event","newTerm","target","value"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AACnB,kBAAwBH,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOI,IAAP;AAAA,MAAaC,OAAb,iBADmB,CAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;AAEAJ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMK,MAAM;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACPJ,KAAK,CAACK,GAAN,CAAU,oCAAV,EAAgD;AACpDC,kBAAAA,MAAM,EAAE;AACNC,oBAAAA,MAAM,EAAE,OADF;AAENC,oBAAAA,IAAI,EAAE,QAFA;AAGNC,oBAAAA,MAAM,EAAE,MAHF;AAINC,oBAAAA,MAAM,EAAE,GAJF;AAKNC,oBAAAA,QAAQ,EAAET;AALJ;AAD4C,iBAAhD,CADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAANE,MAAM;AAAA;AAAA;AAAA,OAAZ;AAWD,GAZQ,EAYN,CAACF,IAAD,CAZM,CAAT;;AAcA,WAASU,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA7B;AACAb,IAAAA,OAAO,CAACW,OAAD,CAAP;AACD;;AACD,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAyB,UAAA,KAAK,EAAEZ,IAAhC;AAAsC,UAAA,QAAQ,EAAEU;AAAhD;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CA9DD;;GAAMX,M;;KAAAA,M;AAgEN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Search = () => {\r\n  const [term, setTerm] = useState(\"\");\r\n  // We cannot mark the arrow function that we're passing to useEffect as async or any other function.\r\n  // i.e\r\n  // useEffect(\r\n  //   (async) => {\r\n  //     await axios(\"Url\");\r\n  //   },\r\n  //   [term]\r\n  // );    is wrong. To solve this we can use three ways\r\n  // Method 1\r\n\r\n  // useEffect(() => {\r\n  //   const search = async () => {\r\n  //     await axios.get(url);\r\n  //   };\r\n  // }, [term]);\r\n\r\n  // Method 2\r\n\r\n  // useEffect(() => {\r\n  //   (async () => {\r\n  //     await axios.get(url);\r\n  //   })();\r\n  // }, [term]);\r\n\r\n  // Method 3: Using promises\r\n\r\n  // useEffect(() => {\r\n  //   axios.get(url).then((res) => {\r\n  //     console.log(response);\r\n  //   });\r\n  // }, [term]);\r\n\r\n  useEffect(() => {\r\n    const search = async () => {\r\n      await axios.get(\"https://en.wikipedia.org/w/api.php\", {\r\n        params: {\r\n          action: \"query\",\r\n          list: \"search\",\r\n          format: \"json\",\r\n          origin: \"*\",\r\n          srsearch: term,\r\n        },\r\n      });\r\n    };\r\n  }, [term]);\r\n\r\n  function handleChange(event) {\r\n    const newTerm = event.target.value;\r\n    setTerm(newTerm);\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"ui form\">\r\n        <div className=\"label\">\r\n          <label>Enter Search Term</label>\r\n          <input className=\"input\" value={term} onChange={handleChange} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"C:/Users/roste/Downloads/widgets-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\roste\\\\Downloads\\\\widgets-app\\\\src\\\\components\\\\Dropdown.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport react, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Dropdown = function Dropdown(_ref) {\n  _s();\n\n  var options = _ref.options,\n      selected = _ref.selected,\n      onSelected = _ref.onSelected;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var renderedOptions = options.map(function (option, index) {\n    if (option.value === selected.value) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      onClick: function onClick() {\n        return onSelected(option);\n      },\n      children: option.label\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Select a color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: function onClick() {\n          return setOpen(!open);\n        },\n        className: \"ui selected dropdown \".concat(open ? \"visible active\" : \"\"),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"dropdown icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: selected.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu\",\n          children: renderedOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Dropdown, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["C:/Users/roste/Downloads/widgets-app/src/components/Dropdown.js"],"names":["react","useState","Dropdown","options","selected","onSelected","open","setOpen","renderedOptions","map","option","index","value","label"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAuC;AAAA;;AAAA,MAApCC,OAAoC,QAApCA,OAAoC;AAAA,MAA3BC,QAA2B,QAA3BA,QAA2B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACtD,kBAAwBJ,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,eAAe,GAAGL,OAAO,CAACM,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT,EAAmB;AACrD,QAAID,MAAM,CAACE,KAAP,KAAiBR,QAAQ,CAACQ,KAA9B,EAAqC;AACnC,aAAO,IAAP;AACD;;AACD,wBACE;AAAiB,MAAA,SAAS,EAAC,MAA3B;AAAkC,MAAA,OAAO,EAAE;AAAA,eAAMP,UAAU,CAACK,MAAD,CAAhB;AAAA,OAA3C;AAAA,gBACGA,MAAM,CAACG;AADV,OAAUF,KAAV;AAAA;AAAA;AAAA;AAAA,aADF;AAKD,GATuB,CAAxB;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AACE,QAAA,OAAO,EAAE;AAAA,iBAAMJ,OAAO,CAAC,CAACD,IAAF,CAAb;AAAA,SADX;AAEE,QAAA,SAAS,iCAA0BA,IAAI,GAAG,gBAAH,GAAsB,EAApD,CAFX;AAAA,gCAIE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,iBAJF,eAKE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBF,QAAQ,CAACS;AAAhC;AAAA;AAAA;AAAA;AAAA,iBALF,eAME;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBL;AAAvB;AAAA;AAAA;AAAA;AAAA,iBANF;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAeD,CA7BD;;GAAMN,Q;;KAAAA,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import react, { useState } from \"react\";\r\n\r\nconst Dropdown = ({ options, selected, onSelected }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const renderedOptions = options.map((option, index) => {\r\n    if (option.value === selected.value) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div key={index} className=\"item\" onClick={() => onSelected(option)}>\r\n        {option.label}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"ui form\">\r\n      <div className=\"field\">\r\n        <label className=\"label\">Select a color</label>\r\n        <div\r\n          onClick={() => setOpen(!open)}\r\n          className={`ui selected dropdown ${open ? \"visible active\" : \"\"}`}\r\n        >\r\n          <i className=\"dropdown icon\"></i>\r\n          <div className=\"text\">{selected.label}</div>\r\n          <div className=\"menu\">{renderedOptions}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n"]},"metadata":{},"sourceType":"module"}